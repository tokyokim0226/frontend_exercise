* {
    margin: 0;
    padding: 0;
    font-family: 'Poppins', sans-serif;
    box-sizing: border-box;
}

.big-container{
    display:flex;
    align-items: center;
    justify-content: center;
}

.small-container{
    width: 90vh;
    height: 95vh;
    background-color: bisque;
    position: absolute;
    display: flex;
    flex-direction: column;
    top: 50%;
    left: 50%;
    /* when you are moving the element, you are moving its top left corner to the center of its parent (which is not visually seen as the item being in the center)
    Therefore, to center the CENTER of the element you want to center, you need to further move that element by 50% of its width to the left and 50% of its height to the top*/
    transform: translate(-70%,-50%); 
    justify-content: center;
    align-items: center;

}

.turn-notifier{
    background-color: darkgoldenrod;
    padding: 1vh;
    margin: 1vh;
    width: 80vh;
    display: flex;
    align-items: center;
    justify-content: center;

}

.turn-notifier p {
    font-size: 5vh;
}

.game{
    width: 80vh;
    height: 80vh;
    position: relative;
    background-color: brown;
    display: flex;
    flex-direction: column;
    padding: 2.5vh;
}

.row {
    position: relative;
    /* background-color: white; */
    margin: auto;
    display: flex;
}

.row .cell {
    width: 20vh;
    height: 20vh;
    display: flex;
    background-color: white;
    margin: 2.5vh;
    justify-content: center;
    align-items: center;
    /* do not need to add padding if i do jcc and */
    font-size: 20vh;
    color: black;
}

.row .cell:hover {
    cursor: pointer;
    background-color: rgba(240, 139, 139, 0.9);
}

.row .cell.empty:hover {
    /* We can remove this hover effect by having a class then removing tat class when clicked in the event listner in script */
    background-color: bisque;
    cursor: pointer;
}

.row .cell.gameOver:hover {
    cursor: default;
    background-color: white;
}

.board{
    height: 45vh;
    width: 40vh;
    background-color: rgba(211, 207, 151, 0.633);
    position: absolute;
    display: flex;
    top:50%;
    left:70%;
    transform: translate(0%,-50%);
    /* If want to keep the corner the same percentage rounded, also use vh/some sort of metric that is relative to the viewport size for bordder radius as well */
    border-radius: 5vh; 
    flex-direction: column;
    /* If the below is active then it is forcing the items to stay on the main axis */
    /* align-items: center; */
}

.board .title {
    background-color: rgb(181, 164, 232);
    width: 35vh;
    padding: 2%;
    margin: 5% auto 5%;
    font-size: 4vh;
    border-radius: 3vh; 
    font-family: 'Times New Roman', Times, serif;
    text-align: center;
}

.board .player {
    font-size: 3vh;
    margin-bottom: 1vh;
}

.board .score {
    font-size: 2vh;
}

.board .scoreBoard {
    display: flex;
    justify-content: space-evenly;
    /*  space-between --> only creates maximum space BETWEEN elements 
        space-evenly --> leaves same amount of space at both ends√ü
        */
    text-align: center;
    margin-bottom: 1vh;
}

.board .duringGame{
    display: flex;
    justify-content: space-evenly;
    margin-bottom: 5%;
}

.board .afterGame {
    display: flex;
    justify-content: space-evenly;
}

.board button {
    width: 44%;
    padding: 4%;
    font-size: 2vh;
    
}