* {
    margin: 0;
    padding: 0;
    font-family: 'Poppins', 'sans-serif';
    box-sizing: border-box;
}


body {
    background: #f7edff;
}

.buttons {
    margin: 50px;
}

.buttons button {
    background: #333;
    margin: 0;
    color: #fff;
    cursor: pointer;
    margin: 5px;
    height: 40px;
    width: 120px;
    outline: 0;
    border:0;
}

#toastBox {
    position: absolute;
    bottom: 30px;
    right: 30px;
    display: flex;
    align-items: flex-end;
    flex-direction: column;
    overflow: hidden;
    /* padding: 20px; */
    box-shadow: 10px, 10p;

}

.toast {
    width: 400px;
    height: 80px;
    background: white;
    font-weight: 500;
    margin: 15px 0;
    box-shadow: 0 0 20px rgba(0,0,0,0.3);
    display: flex;
    align-items: center;
    position: relative;

}

.toast i {
    margin: 0 20px;
    font-size: 35px;
    color:green;
}

.toast.error i {
    /* difference between leaving a space between .toast and .error and not leaving a space
    
    for instance)

    h2.myClass looks for h2 with class myClass. But you actually want to apply style for h2 inside .myClass so you can use descendant selector .myClass h2.

    hence, if i do .toast.error, I'm looking for an element that has a class of .toast and a class of .error, and the <i> tag inside such an element.
    however, if i do .toast .error, I'm looking for an element that's a child element with the class .error INSIDE of a parent element with a class of .toast, and then targeting the <i> tag inside the child element. 

    In our case, our element has BOTH the tags toast and error, so we do not want the space in between.
        
    */
    color: red;
}

.toast.invalid i {
    color: orange;
}

.toast::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 5px;
    background: green;
    animation: anim 6s linear forwards;
}

@keyframes anim {
    100% {
        width: 0;
    }
}

.toast.error::after {
    background:red;
}

.toast.invalid::after {
    background:orange;
}